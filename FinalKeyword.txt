----------------------------Final Keyword In java------------------------------


The final keyword in java is used to restrict the user. The java final keyword can be used in many context. Final can be:

variable
method
class


----------------------------------------------------------------
1) Java final variable

If you make any variable as final, you cannot change the value of final variable(It will be constant).
----------------------------------------------------------------

2) Java final method

If you make any method as final, you cannot override it.
-----------------------------------------------------------------

3) Java final class

If you make any class as final, you cannot extend it.
-----------------------------------------------------------------

4)Is final method inherited?

Ans) Yes, final method is inherited but you cannot override it. For Example:

class Bike{  
  final void run(){System.out.println("running...");}  
}  
class Honda2 extends Bike{  
   public static void main(String args[]){  
    new Honda2().run();  
   }  
}  
----------------------------------------------------------------------

5) What is blank or uninitialized final variable?

A final variable that is not initialized at the time of declaration is known as blank final variable.

If you want to create a variable that is initialized at the time of creating object and once initialized may not be changed, it is useful. For example PAN CARD number of an employee.

It can be initialized only in constructor.
----------------------------------------------------------------------------

6) Can we initialize blank final variable?

Yes, but only in constructor. For example:

class Bike10{  
  final int speedlimit;//blank final variable  
    
  Bike10(){  
  speedlimit=70;  
  System.out.println(speedlimit);  
  }  
  
  public static void main(String args[]){  
    new Bike10();  
 }  
}  
---------------------------------------------------------------------------------

7)static blank final variable

A static final variable that is not initialized at the time of declaration is known as static blank final variable. It can be initialized only in static block.

Example of static blank final variable

class A{  
  static final int data;//static blank final variable  
  static{ data=50;}  
  public static void main(String args[]){  
    System.out.println(A.data);  
 }  
}  
--------------------------------------------------------------------------------------

8) What is final parameter?

If you declare any parameter as final, you cannot change the value of it.

class Bike11{  
  int cube(final int n){  
   n=n+2;//can't be changed as n is final  
   n*n*n;  
  }  
  public static void main(String args[]){  
    Bike11 b=new Bike11();  
    b.cube(5);  
 }  
}  
-----------------------------------------------------------------------------------------------

Important points on final in Java

1. Final keyword can be applied to a member variable, local variable, method or class in Java.

2. Final member variable must be initialized at the time of declaration or inside the constructor, failure to do so will result in compilation error.

3. You can not reassign value to a final variable in Java.

4. The local final variable must be initialized during declaration.

5. The only final variable is accessible inside an anonymous class in Java,, but in Java 8, there is something called effectively final variable, which is non-final local variables but accessible inside the anonymous class. The only condition is that they should not be reassigned a value once created. If you do so, the compiler will throw an error.  See Java SE 8 for Really Impatient for more details.

6. A final method can not be overridden in Java.

7. A final class can not be inheritable in Java.

8. Final is a different than finally keyword which is used to Exception handling in Java.

9. Final should not be confused with finalize() method which is declared in Object class and called before an object is a garbage collected by JVM.

10. All variable declared inside Java interface are implicitly final.

11. Final and abstract are two opposite keyword and a final class can not be abstract in Java.

12. Final methods are bonded during compile time also called static binding.

13. Final variables which are not initialized during declaration are called blank final variable and must be initialized in all constructor either explicitly or by calling this(). Failure to do so compiler will complain as "final variable (name) might not be initialized".

14. Making a class, method or variable final in Java helps to improve performance because JVM gets an opportunity to make assumption and optimization.

15. As per Java code convention, final variables are treated as constant and written in all Caps e.g.

6. Making a collection reference variable final means only reference can not be changed but you can add, remove or change object inside collection. For example:

Read more: http://javarevisited.blogspot.com/2011/12/final-variable-method-class-java.html#ixzz4mPI39EvY

Read more: http://javarevisited.blogspot.com/2011/12/final-variable-method-class-java.html#ixzz4mPHxm4pB


Read more: http://javarevisited.blogspot.com/2011/12/final-variable-method-class-java.html#ixzz4mPHsGnFR